[{"/Users/Alan/Desktop/Project/robinhood/src/App.js":"1","/Users/Alan/Desktop/Project/robinhood/src/index.js":"2","/Users/Alan/Desktop/Project/robinhood/src/Header.js":"3","/Users/Alan/Desktop/Project/robinhood/src/reportWebVitals.js":"4","/Users/Alan/Desktop/Project/robinhood/src/Newsfeed.js":"5","/Users/Alan/Desktop/Project/robinhood/src/Stats.js":"6","/Users/Alan/Desktop/Project/robinhood/src/LineGraph.js":"7","/Users/Alan/Desktop/Project/robinhood/src/StatsRow.js":"8","/Users/Alan/Desktop/Project/robinhood/src/fireBase.js":"9","/Users/Alan/Desktop/Project/robinhood/src/TimeLine.js":"10","/Users/Alan/Desktop/Project/robinhood/src/api.js":"11"},{"size":508,"mtime":1611134340425,"results":"12","hashOfConfig":"13"},{"size":500,"mtime":1611080400305,"results":"14","hashOfConfig":"13"},{"size":841,"mtime":1611562437605,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1611080400305,"results":"16","hashOfConfig":"13"},{"size":2017,"mtime":1611559085180,"results":"17","hashOfConfig":"13"},{"size":2921,"mtime":1611600699165,"results":"18","hashOfConfig":"13"},{"size":1873,"mtime":1611212506473,"results":"19","hashOfConfig":"13"},{"size":1516,"mtime":1611562189104,"results":"20","hashOfConfig":"13"},{"size":541,"mtime":1611521179623,"results":"21","hashOfConfig":"13"},{"size":557,"mtime":1611524058673,"results":"22","hashOfConfig":"13"},{"size":78,"mtime":1611600583059,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4l5wsf",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Alan/Desktop/Project/robinhood/src/App.js",[],"/Users/Alan/Desktop/Project/robinhood/src/index.js",[],"/Users/Alan/Desktop/Project/robinhood/src/Header.js",["48","49","50","51","52","53"],"/Users/Alan/Desktop/Project/robinhood/src/reportWebVitals.js",[],"/Users/Alan/Desktop/Project/robinhood/src/Newsfeed.js",["54"],"/Users/Alan/Desktop/Project/robinhood/src/Stats.js",["55","56","57"],"import React,{useState, useEffect} from 'react';\nimport './Stats.css';\nimport axios from 'axios';\nimport StatsRow from './StatsRow';\nimport {db} from './fireBase';\nimport {key} from './api'\nfunction Stats() {\n\n    const [stockData, setstockData] = useState([]);\n    const KEY_URL = `&token=${key}`;\n    const BASE_URL = \"https://finnhub.io/api/v1/quote?symbol=\";\n\n    const [myStocks, setmyStocks] =useState([]);\n\n    const getMyStocks = () =>{\n      db\n      .collection('myStocks')\n      .onSnapshot(snapshot =>{\n        console.log(snapshot.docs)\n        let promises = [];\n        let tempData = [];\n        snapshot.docs.map((doc)=>{\n          promises.push(getStockData(doc.data().ticker)\n          .then(res =>{\n            tempData.push({\n              id:doc.id,\n              data: doc.data(),\n              info: res.data\n            })\n          })\n          )\n        })\n        Promise.all(promises).then(()=>{\n          console.log(tempData)\n          setmyStocks(tempData);\n        })\n      })\n    };\n\n    const getStockData = (stock) =>{\n      return axios\n        .get(`${BASE_URL}${stock}${KEY_URL}`)\n        .catch((error)=>{\n          console.log(\"Error\",error.message);\n        })\n    }\n\n    useEffect(() => {\n      getMyStocks();\n       let tempStocksData =[];\n        const stocksList = [\"AAPL\",\"MSFT\",\"TSLA\",\"FB\",\"BABA\",\"UBER\",\"DIS\",\"SBUX\"];\n\n        let promises = [];\n        \n        stocksList.map((stock)=>{\n          promises.push(\n            getStockData(stock)\n            .then((res)=>{\n              tempStocksData.push({\n\n                name:stock,\n                ...res.data\n              });\n            })\n          )\n        });\n\n        Promise.all(promises).then(()=>{\n         \n            setstockData(tempStocksData);\n        })\n\n    }, [])\n\n\n  return (\n    <div className='stats'>\n      <div className=\"stats__container\">\n        <div className=\"stats__header\">\n          <p>Stocks</p>\n        </div>\n        <div className=\"stats__content\">\n          <div className=\"stats__rows\">\n          {myStocks.map((stock)=>(\n                <StatsRow\n                  key={stock.data.ticker}\n                  name={stock.data.ticker}\n                  openPrice={stock.info.o}\n                  shares={stock.data.shares}\n                  price={stock.info.c}\n                />\n              ))} \n             \n          </div>\n        </div>\n\n        <div className=\"stats__header stats__lists\">\n          <p>Lists</p>\n\n        </div>\n        <div className=\"stats__content\">\n          <div className=\"stats__rows\">\n          {stockData.map((stock) => (\n              <StatsRow\n                key={stock.name}\n                name={stock.name}\n                openPrice={stock.o}\n                price={stock.c}\n              />\n            ))}\n          {/* {stocks we can buy} */}\n          </div>\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default Stats\n","/Users/Alan/Desktop/Project/robinhood/src/LineGraph.js",[],"/Users/Alan/Desktop/Project/robinhood/src/StatsRow.js",["58","59"],"/Users/Alan/Desktop/Project/robinhood/src/fireBase.js",["60"],"// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBHEka5jgzLj8S5xbVxCRjuGX2y-lIbYsg\",\n  authDomain: \"robinhood-ad05e.firebaseapp.com\",\n  projectId: \"robinhood-ad05e\",\n  storageBucket: \"robinhood-ad05e.appspot.com\",\n  messagingSenderId: \"869631774177\",\n  appId: \"1:869631774177:web:02afa1b34bd524044fd6a0\",\n  measurementId: \"G-X5V8PR5FSW\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nexport {db};","/Users/Alan/Desktop/Project/robinhood/src/TimeLine.js",[],"/Users/Alan/Desktop/Project/robinhood/src/api.js",["61"],{"ruleId":"62","severity":1,"message":"63","line":11,"column":7,"nodeType":"64","endLine":11,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":22,"column":9,"nodeType":"64","endLine":22,"endColumn":21},{"ruleId":"65","severity":1,"message":"66","line":23,"column":9,"nodeType":"64","endLine":23,"endColumn":21},{"ruleId":"65","severity":1,"message":"66","line":24,"column":9,"nodeType":"64","endLine":24,"endColumn":21},{"ruleId":"65","severity":1,"message":"66","line":25,"column":9,"nodeType":"64","endLine":25,"endColumn":21},{"ruleId":"65","severity":1,"message":"66","line":26,"column":9,"nodeType":"64","endLine":26,"endColumn":21},{"ruleId":"67","severity":1,"message":"68","line":12,"column":25,"nodeType":"69","messageId":"70","endLine":12,"endColumn":34},{"ruleId":"71","severity":1,"message":"72","line":22,"column":32,"nodeType":"73","messageId":"74","endLine":22,"endColumn":34},{"ruleId":"71","severity":1,"message":"72","line":55,"column":31,"nodeType":"73","messageId":"74","endLine":55,"endColumn":33},{"ruleId":"75","severity":1,"message":"76","line":73,"column":8,"nodeType":"77","endLine":73,"endColumn":10,"suggestions":"78"},{"ruleId":"67","severity":1,"message":"79","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":54,"column":7,"nodeType":"64","endLine":54,"endColumn":42},{"ruleId":"67","severity":1,"message":"80","line":14,"column":7,"nodeType":"69","messageId":"70","endLine":14,"endColumn":18},{"ruleId":"67","severity":1,"message":"81","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'setTopics' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getMyStocks' and 'getStockData'. Either include them or remove the dependency array.","ArrayExpression",["82"],"'Doughnut' is defined but never used.","'firebaseApp' is assigned a value but never used.","'axios' is defined but never used.",{"desc":"83","fix":"84"},"Update the dependencies array to be: [getMyStocks, getStockData]",{"range":"85","text":"86"},[1785,1787],"[getMyStocks, getStockData]"]